TODO/bugs in Irssi SILC client
==============================

 o Add local command to switch the channel's private key when channel has
   several private keys.  Currently sending channel messages with many
   keys is not possible because changing the key is not possible by the
   user.

 o JOINing to +a (requires passphrase to JOIN) does not work on autojoin.
   Seems the passwords in the .silc/config has no effect.

 o Add local commands to list the current server and client public keys
   that the user has.  And a local command to dump the contents of the
   public key to the screen.  Something like LISTKEYS, SHOWKEY...

 o The JOIN command's HELP is generated from Irssi IRCs JOIN help and
   the syntax is not same in SILC.  This must be fixed.  Most likely
   we must forget the Irssi's JOIN command and mimic it to get our
   required syntax for it too.

 o We should get rid of the clientconfig.[ch] in Irssi SILC and move the
   cipher, hash, hmac and pkcs configuration to the Irssi SILC's config
   file.

 o Add PERL scripting support from Irssi CVS.

 o Extend the /HELP command to support sub commands or something.  So
   that user can say /help set mutual_authentication they would get
   help of the mutual_authentication setting.

 o Set different kind of settings, like, /set mutual_authentication,
   /set key_exchange_timeout, /set conn_auth_timeout etc etc.


TODO/bugs In SILC Client Library
================================

 o JOIN command's argument handling is buggy.  See the XXX in the code.


TODO/bugs In SILC Server
========================

 o After backup resume protocol the TOPIC_SET was not handled correctly
   by all (unknown Channel ID).

 o Channel user mode changes are notified unnecessarely when switching
   to backup router on router crash.

 o Change the server to connect to another server from low ports (706)
   and not from high ports.  Currently we cannot do incoming connection
   checking by remote port because the port is not fixed.

 o Announcements are incomplete: channel topics are not announced,
   user modes (UMODE) are not announced.

 o Add a timeout to handling incoming JOIN commands.  It should be 
   enforced that JOIN command is executed only once in a second or two
   seconds.  Now it is possible to accept n incoming JOIN commands
   and process them without any timeouts.  THis must be employed because
   each JOIN command will create and distribute the new channel key
   to everybody on the channel.

 o Optimize the WHOIS and IDENTIFY commands to somehow check whether the
   requested clients are on some channel that the server knows about.  If
   this is the case then the request is not needed to be forwarded to the
   router.  One specific optimization could be done with JOIN command.
   If the previous command to the WHOIS and IDENTIFY commands are JOIN
   command (from the client) it can be expected (though it must be
   verified) that the client is resolving the users on the channel it just
   joined.  If server has done this once there is really no reason to
   resolve it twice (from the router), it can reply directly back with
   the information it knows.  This is because the server would (will) 
   receive notifications from the router for users that are on a local
   channel.

   The same is with whowas command.  Actually with all these commands
   it should be checked also whether the requested information is local.
   If it is, there is no reason to send it to the router, since the server
   knows it best.

 o Incomplete IPv6 support:

	o silcd/serverid.c and its routines supports only IPv4.

 o New configuration file format must be added.  The new one will be
   done using the dotconf config library (lib/dotconf).  The following
   tasks relates closely to this as well and must be done at the same time
   when adding the new config file format:

	o Server says that it is able to listen on multiple ports but
	  currently that is bogus.  It can, but internals are for single
	  server.

 	o Protocol execution timeouts are hard coded, should be
	  configurable.

 	o IP address fields in configuration file should accept mask
	  format as well, IP/MASK, and not just plain IP.

	 o Connection classes should be actually implemented in
	  serverconfig.c.  They can be defined but they are totally
	  ignored currently.  And they should be redefined also.


TODO/bugs In SILC Libraries
===========================

 o Optimizations to lib/silcsftp

	o Do not allocate new req for every client request.  Use
	  preallocated requests and recycle them.

	o Use SilcList instead of SilcDList for requests.  It is faster.

	o Do not allocate new buffer for every packet.  Use preallocated
	  buffer and reallocate only if necessary.

 o Compression routines are missing.  The protocol supports packet
   compression thus it must be implemented.  SILC Comp API must be
   defined.  zlib package is already included into the lib dir (in CVS,
   not in distribution), but it is not used yet, and it requires some
   tweaking on the Makefiles (we want static lib not shared).

 o All payload parsing (decoding) functions should take unsigned char *
   and uint32 as data and data length as arguments.  Now some of the
   routines do already that but most of the routines use SilcBuffer.
   The SilcBuffer ones should be removed since buf->data and buf->len
   is more convenient to use.  These are currently only cosmetic changes
   but at some point must be done to make the payload interfaces
   consistent.

 o Incomplete IPv6 support:

	o All network routines in lib/silcutil/silcnet.[ch] does not
	  support IPv6.
	o silc_id_render supports only IPv4 based ID's in the file
	  lib/silcutil/silcutil.c.

 o Add builtin SOCKS and HTTP Proxy support, well the SOCKS at least.
   SILC currently supports SOCKS4 and SOCKS5 but it needs to be compiled
   in separately.


TODO/Bugs in native WIN32 support (libraries)
=============================================

 o silc_net_create_connection_async does not work the same way than on
   Unix.  Do it with threads on WIN32.  The function works but is not
   actually async currently.


TODO In SILC Protocol
=====================

 o If channel founder mode is set and the invite mode is set on channel
   then the founder should be added to the list automatically so that
   if the founder signoff's it will be able join again to the invite only
   channel wihtout being invited.


TODO After 1.0
==============

 o X.509 certificate support.  SILC protocol supports certificates and
   it would be great to have support for them.  This is a big task as
   support has to be made for ASN.1 as well.  I've looked into OpenSSL 
   package as it has X.509 certificate support (and ASN.1 as well).  
   The code does not look very good to my eye but it has some potentials.
   This should be looked at more closely.

   Naturally own SILC Certificate API has to be defined regardles what
   the actual X.509 library is (OpenSSL X.509 or something else).  Other
   choice is to write own X.509 library but I'm not going to do it - 
   I can help to migrate the OpenSSL X.509 into SILC and I can help if 
   someone would like to write the X.509 library - but I'm not going 
   to start writing one myself.  Anyhow, the OpenSSL X.509 lib should
   be checked.

   Other package that should be checked is the NSS's X509 library.

 o SSH2 public keys support.  Maybe - not really needed but could be
   nice as SSH is widely used all over the place.  SILC Protocol 
   supports SSH2 public keys.

 o OpenPGP certificate support.

 o Cipher optimizations (asm, that this) at least for i386 would be nice.
