Sat Sep 30 16:57:42 EEST 2000  Pekka Riikonen <priikone@poseidon.pspt.fi>

	* Removed the function just added to lib/silcutil/silcschedule.[ch].

	* Cras fixed and optimized the packet handling even further and
	  it should work now.  Minor change to the prototype of function
	  silc_packet_receive_process in lib/silccore/silcpacket.[ch].

Sat Sep 30 08:48:47 EEST 2000  Pekka Riikonen <priikone@poseidon.pspt.fi>

	* Added new function into lib/silcutil/silcschedule.[ch]:
	  silc_schedule_with_fd to select() a specified fd.  The function
	  returns after timeout expires or data arrives or goes.  The
	  function is used by packet routines to wait that all data is
	  received from network.

	* Fixed data reading from network in lib/silccore/silcpacket.c.
	  The code now assures that all data is read from the fd and then
	  continues packet processing.  This was a bug fix since the code
	  used to drop some data in some circumstances.

	* Added new function into lib/silcclient/client.[ch]:
	  silc_client_start_key_exchange to start key exchange after
	  connection has been established to server.  The code internally
	  now uses this funtion but its main purpose was to provide it
	  for applications that perform their own connecting.  After
	  application has created a connection it merely calls this
	  function to start the key exchange between client and server.
	  The library takes care of everything else after that.

	  Updated also lib/silcclient/README to explain the usage of
	  this new function.

	* Do not send to application information that connection has
	  been established.  Application gets notified it by connect
	  operation anyway.

Thu Sep 28 23:40:19 EEST 2000  Pekka Riikonen <priikone@poseidon.pspt.fi>

	* Applied cras's patch to add silc_schedule_one function.  The
	  function runs scheduler once and returns.

	* Fixed the scheduler after cras messed it up.  The timeout
	  handling works now as it's supposed to work.

	* Added into lib/silccore/ silcnotify.h to include notify
	  message types support.  Changed silc_server_send_notify*
	  functions, in server.[ch], to support those new notify types.
	  Added the support for the notify types into client library,
	  as well.  Added new notify client operation into ops.h in
	  lib/silcclient/.

	* Changed silc_server_packet_send_to_channel to send normal
	  packets instead of just channel message packets.  The function
	  is now used to send the notify packets to channels.  It is not
	  used to send channel message packets anymore, as server never
	  sends them anymore.

	* Added explicit casting into lib/silcutil/silcbuffmt.c to few
	  va_arg()s as it seems to require it nowadays.  I guess, if SILC
	  is compiled with older va_arg() the new code should work anyway.

Wed Sep 13 18:10:14 EEST 2000  Pekka Riikonen <priikone@poseidon.pspt.fi>

	* Splitted core library.  Core library (lib/silccore) includes
	  now only SILC protocol specific core (and common) components.
	  Created new utility library (lib/silcutil) that includes more
	  generic purpose stuff.  The stuff for util library was taken
	  from the old core library.  This was minor and easy split.

	* Created SILC Client Library (lib/silcclient) that includes
	  implementation of the SILC client without user interface.  This
	  was major move from silc/ directory.  The code has been changed
	  so that it is transparent towards the user interface.  The
	  silc/ directory includes now the same user interface as before
	  and it uses the new client library.  Read lib/silcclient/README.
	  Basicly, the client library performs everything else related
	  to SILC except user interface handling.  Also, configuration
	  files are considered to be part of user interface and library
	  does not handle them.

	  This change also changed a lot of structures, function naming etc.
	  Most important change was that SilcClientWindow object was
	  renamed to SilcClientConnection in the client library.  Created
	  also new file lib/silcclient/ops.h.  Also added new files
	  silc/local_command.[ch] and silc/client_ops.[ch].

	  All these changes were made to make it easier for user interface
	  designers to create what ever user interface for the SILC client
	  they want.

	  It is also expected that the server will be moved to lib
	  directory as well and SILC Server Library will be created;
	  sometimes in the future.

	* Removed Local commands from lib/silccore/silccommand.h as
	  they are application specific and new client library does not
	  handle any of those anymore.

	* Several functions moved to lib/silcutil/silcutilc.[ch] from
	  old client implementation in silc/.

	* Added support for callback functions in SILC_LOG_* macros.
	  Application can now set its own callbacks that will be called
	  instead of using the default functions that will always print
	  the debug messages to stderr (or stdout).  Also, debugging can
	  now be disabled by setting silc_debug to FALSE and re-enabled by
	  setting it to TRUE.  Note, that logging will still work even
	  if debugging is disabled.

	  New functions in lib/silcutil/silclog.[ch]: silc_log_set_callbacks,
	  silc_log_reset_callbacks, silc_log_set_debug_callbacks and
	  silc_log_reset_debug_callbacks.

	* To enable debugging in silc client one must give now -d
	  option on command line.

	* Changed silc_schedule_init to automatically allocate task queues
	  if they are not allocated before calling it.

Thu Sep  7 10:49:33 EEST 2000  Pekka Riikonen <priikone@poseidon.pspt.fi>

	* Added GMP 3.1 into math library.

Sun Aug 20 21:27:26 EEST 2000  Pekka Riikonen <priikone@poseidon.pspt.fi>

	* Added SILC_PACKET_REMOVE_CHANNEL_USER to remove a client from
	  a channel in SILC network.  The packet is used by servers and
	  routers to notify other routers that user has left a channel.
	  This little feature was missing until now.  Added the feature
	  to protocol specification as well.

	  Added functions: silc_server_send_remove_channel_user and
	  silc_server_remove_channel_user into server.[ch].

	* Added SILC_PACKET_REKEY and SILC_PACKET_REKEY_DONE into
	  lib/silccore/silcpacket.h.  However, they are not implemented
	  yet.

Sat Aug 19 23:04:16 EEST 2000  Pekka Riikonen <priikone@poseidon.pspt.fi>

	* Fixed joining to a channel and sending channel messages
	  between server and router.  The channel message sending should
	  now work inside a cell.

Tue Jul 25 20:46:13 EEST 2000  Pekka Riikonen <priikone@poseidon.pspt.fi>

	* Fixed the private message sending between server and router.
	  The private message sending should now work inside a cell.

	* Added silc_server_replace_id into server.[ch] to replace
	  existing ID in the SILC network.

	* Added silc_idlist_find_server_by, silc_idlist_replace_client_id
	  and silc_idlist_replace_server_id into idlist.[ch] in server.

Mon Jul 24 18:33:31 EEST 2000  Pekka Riikonen <priikone@poseidon.pspt.fi>

	* Fixed the server to server connections.  Server can again now
	  connect to router.  Router to router connections probably does
	  not work just yet.

Thu Jul 20 13:15:01 EEST 2000  Pekka Riikonen <priikone@poseidon.pspt.fi>

	* Added dynamic protocol registering support.  Now protocols can
	  registered and unregistered on the fly.  Patch by cras.

Wed Jul 19 19:08:46 EEST 2000  Pekka Riikonen <priikone@poseidon.pspt.fi>

	* Added lib/contrib directory to hold routines that some platforms
	  don't have but are needed by SILC.

	* Added getopt.c, getopt1.c and getopt.h from GNU C library
	  into lin/contrib to provide getopt() and getopt_long() for
	  those who don't have it.

Tue Jul 18 20:41:20 EEST 2000  Pekka Riikonen <priikone@poseidon.pspt.fi>

	* Added AWAY command to client.  When away message is set and
	  client receives a private message packet the client automatically
	  replies to the sender with the away message.

	* Fixed a bug in lib/silcmath/mpbin.c: silc_mp_mp2bin.  This
	  bug seemed to be the cause of recent problems when compiling
	  with gcc-2.95.

	* Added version detection support to SKE protocol specification
	  and added the new changes to the SKE implementation as well.
	  There were other minor changes in the SKE protocol as well.

	  Many changes in lib/silcske/silcske.[ch] and in
	  lib/silcske/payload.[ch].

	* Added ^U functionality, clear input line.  Patch from cras.

Mon Jul 17 23:33:26 EEST 2000  Pekka Riikonen <priikone@poseidon.pspt.fi>

	* Mainly small bugfixes on core library.  Fixed some debugging
	  logging and buffer overflow in silclog.c.

	* Updated config.sub and config.guess on the distribution tree.

Sat Jul 15 15:33:48 EEST 2000  Pekka Riikonen <priikone@poseidon.pspt.fi>

	* Added command lagging support in server. Client may execute
	  commands now only once in two seconds.

Thu Jul 13 22:10:21 EEST 2000  Pekka Riikonen <priikone@poseidon.pspt.fi>

	* Optimized packet reception. MAC computation and checking is now
	  also more optimized.  A lot previously duplicated code is now
	  used as generic by both client and server.

	* Fixed key pair generation in clientutil.c

Wed Jul 12 18:28:07 EEST 2000  Pekka Riikonen <priikone@poseidon.pspt.fi>

	* Added into lib/silccore/silcbufutil.[ch] new function;
	  silc_buffer_realloc.

	* Moved generic packet sending/encryption functions to 
	  lib/silccore/silcpacket.[ch] from client and server.  Some
	  rewriting of the functions.

	* Moved all generic packet reception/decryption functions to
	  lib/silccore/silcpacket.[ch] from client and server.  The
	  packet processing is now much cleaner in both client and server.
	  These were major changes in both client and server.

	* Created many common functions in server to do packet sending.
	  Previously code were duplicated a lot, this has been removed
	  with these changes.

Tue Jul 11 20:27:26 EEST 2000  Pekka Riikonen <priikone@poseidon.pspt.fi>

	* Rewrote major parts of the ID cache system.  Don't know 
	  whether it is better now or not but at least the API is more
	  cleaner now.

	* Major rewrite on ID cache stuff on client because of the ID
	  cache API changes.  Added idlist.c to client.

	* Also major rewrite on ID cache stuff on server as well.
	  Major rewrite of idlist.[ch]. SilcXXXList's are now named
	  SilcXXXEntry's.  We won't keep anymore idlist specific pointers
	  in hand, instead they are all put into the ID cache system now.
	  All server_idlist_* routines uses ID cache now instead of
	  traversing its own lists (those lists does not exist anymore).
	  SilcIDList though still exists.  Also, SilcXXXEntry's are
	  now pointers.

Sun Jul  9 15:19:24 EEST 2000  Pekka Riikonen <priikone@poseidon.pspt.fi>

	* Finally made the SKE implementation compliant to the protocol
	  specification.  All mp integers are now binary encoded as
	  opposed being HEX encoded.

	* Added lib/silcmath/mpbin.[ch].  Encoding mp intergers to and
	  from binary data.

	* Added into lib/silccore/silcutil.[ch] PEM encoding/decoding
	  functions: silc_[encode/decode]_pem.  Also added function
	  silc_encode_pem_file to PEM encode with newlines ('\n') for
	  saving into a file.

	* SILC public keys are now encoded either PEM or binary.  Same
	  option is for private keys as well.  By default private keys
	  are binary encoded and public keys PEM encoded.  Silly HEX
	  encoding were removed.

	* Added into lib/silccrypt/silchash.[ch] silc_hash_fingerprint
	  function to create fingerprints.

	* Fixed a bug in SHA1; does not change the original data anymore.

	* Partly implemented INFO command on client and server side.
	  Fixed CLEAR command.  Changes to SERVER command; show current
	  server(s) when giving command without arguments.  Added
	  VERSION command to client.

	* Added check to server that unregistered connections cannot
	  execute commands (unless it is specificly allowed).

Thu Jul  6 18:12:24 EEST 2000  Pekka Riikonen <priikone@poseidon.pspt.fi>

	* Fixed screen refresh.

	* Fixed channel joining bug from client.  On some circumstances
	  client tried to join to a channel it had already joined.

	* Added public key verification process into client's protocol.c.
	  The client now verifies the public key from user and saves
	  it into ~./silc/serverkeys/ directory. 

	  Added into: clientutil.[ch]: silc_client_verify_server_key.

	* Changed SKE protocol's silc_ske_initiator_finish function
	  to accept callback function that verifies the received public
	  key.  Removed old silc_ske_verify_public_key function.

Wed Jul  5 19:19:02 EEST 2000  Pekka Riikonen <priikone@poseidon.pspt.fi>

	* Added into silcpkcs[ch]: silc_pkcs_public_key[_data]_set and
	  silc_pkcs_private_key[_data]_set.

	* Made the password and public authentication more cleaner in
	  server's protocol.c.

	* Removed historic and obsolete protocol `channel_auth' from
	  both client and server.

	* Removed wrong way of sending command status messages from
	  server to client in server's command.c.  The old way violated
	  protocol specification.  

	  Changes to silccore/silccommand.[ch]: removed
	  silc_command_encode_status_payload -> not needed anymore,
	  changed silc_command_encode_payload_va to accept extra
	  argument on variable argument list.  The argument type must
	  now be provided to the function.  Also, added new function:
	  silc_command_encode_reply_payload_va which is same as
	  normal command_encode_payload_va except command status type
	  is provided as extra argument.

Tue Jul  4 18:26:39 EEST 2000  Pekka Riikonen <priikone@poseidon.pspt.fi>

	* Added ~./silc directory handling.  The directory includes the
	  public and private keys for the client.

	  Added silc_client_check_silc_dir, silc_client_create_identifier
	  and silc_client_load_keys.

	* Implemented SILC protocol compliant public key.  Added public
	  and private key saving to and loading from files.

	  Added into silcpkcs.[ch]: silc_pkcs_encode_identifier,
	  silc_pkcs_public_key_encode[_data], silc_pkcs_public_key_decode,
	  silc_pkcs_private_key_encode[_data], silc_pkcs_private_key_decode,
	  silc_pkcs_public_key_alloc, silc_pkcs_public_key_free,
	  silc_pkcs_private_key_alloc and silc_pkcs_private_key_free.

	  Implemented: silc_pkcs_save_[public/private]_key[_data] and
	  silc_pkcs_load_[public/private]_key.

Mon Jul  3 18:51:27 EEST 2000  Pekka Riikonen <priikone@poseidon.pspt.fi>

	* Added silc_server_get_route (route.[ch]) to get connection
	  data for the fastest route for given ID.

	* Implemented INVITE command on client and server.  The command
	  were re-defined in the SILC Protocol Specification and the
	  implementation now complies with the specification.

	* Implemented PING command on client and server.

	* Implemented NAMES command on client and server.  The server side
	  supports currently only normal server not router server yet.
	  Some changes to NAMES definition in SILC protocol specification.

Sun Jul  2 18:23:01 EEST 2000  Pekka Riikonen <priikone@poseidon.pspt.fi>

	* Implemented LEAVE command on client and server.

	* Previously deprecated SILC_PACKET_FORWARDED flag is now in use 
	  again.  This change was made to the protocol as well.  Server
	  should not violate the protocol specification anymore.

Fri Jun 30 14:03:26 EEST 2000  Pekka Riikonen <priikone@poseidon.pspt.fi>

	* Added SOCKS4 and SOCKS5 support to SILC client.  SOCKS5
	  was tested.  SOCKS4 was not but should work anyway.
