Mon Jul 17 23:33:26 EEST 2000  Pekka Riikonen <priikone@poseidon.pspt.fi>

	* Mainly small bugfixes on core library.  Fixed some debugging
	  logging and buffer overflow in silclog.c.

	* Updated config.sub and config.guess on the distribution tree.

Sat Jul 15 15:33:48 EEST 2000  Pekka Riikonen <priikone@poseidon.pspt.fi>

	* Added command lagging support in server. Client may execute
	  commands now only once in two seconds.

Thu Jul 13 22:10:21 EEST 2000  Pekka Riikonen <priikone@poseidon.pspt.fi>

	* Optimized packet reception. MAC computation and checking is now
	  also more optimized.  A lot previously duplicated code is now
	  used as generic by both client and server.

	* Fixed key pair generation in clientutil.c

Wed Jul 12 18:28:07 EEST 2000  Pekka Riikonen <priikone@poseidon.pspt.fi>

	* Added into lib/silccore/silcbufutil.[ch] new function;
	  silc_buffer_realloc.

	* Moved generic packet sending/encryption functions to 
	  lib/silccore/silcpacket.[ch] from client and server.  Some
	  rewriting of the functions.

	* Moved all generic packet reception/decryption functions to
	  lib/silccore/silcpacket.[ch] from client and server.  The
	  packet processing is now much cleaner in both client and server.
	  These were major changes in both client and server.

	* Created many common functions in server to do packet sending.
	  Previously code were duplicated a lot, this has been removed
	  with these changes.

Tue Jul 11 20:27:26 EEST 2000  Pekka Riikonen <priikone@poseidon.pspt.fi>

	* Rewrote major parts of the ID cache system.  Don't know 
	  whether it is better now or not but at least the API is more
	  cleaner now.

	* Major rewrite on ID cache stuff on client because of the ID
	  cache API changes.  Added idlist.c to client.

	* Also major rewrite on ID cache stuff on server as well.
	  Major rewrite of idlist.[ch]. SilcXXXList's are now named
	  SilcXXXEntry's.  We won't keep anymore idlist specific pointers
	  in hand, instead they are all put into the ID cache system now.
	  All server_idlist_* routines uses ID cache now instead of
	  traversing its own lists (those lists does not exist anymore).
	  SilcIDList though still exists.  Also, SilcXXXEntry's are
	  now pointers.

Sun Jul  9 15:19:24 EEST 2000  Pekka Riikonen <priikone@poseidon.pspt.fi>

	* Finally made the SKE implementation compliant to the protocol
	  specification.  All mp integers are now binary encoded as
	  opposed being HEX encoded.

	* Added lib/silcmath/mpbin.[ch].  Encoding mp intergers to and
	  from binary data.

	* Added into lib/silccore/silcutil.[ch] PEM encoding/decoding
	  functions: silc_[encode/decode]_pem.  Also added function
	  silc_encode_pem_file to PEM encode with newlines ('\n') for
	  saving into a file.

	* SILC public keys are now encoded either PEM or binary.  Same
	  option is for private keys as well.  By default private keys
	  are binary encoded and public keys PEM encoded.  Silly HEX
	  encoding were removed.

	* Added into lib/silccrypt/silchash.[ch] silc_hash_fingerprint
	  function to create fingerprints.

	* Fixed a bug in SHA1; does not change the original data anymore.

	* Partly implemented INFO command on client and server side.
	  Fixed CLEAR command.  Changes to SERVER command; show current
	  server(s) when giving command without arguments.  Added
	  VERSION command to client.

	* Added check to server that unregistered connections cannot
	  execute commands (unless it is specificly allowed).

Thu Jul  6 18:12:24 EEST 2000  Pekka Riikonen <priikone@poseidon.pspt.fi>

	* Fixed screen refresh.

	* Fixed channel joining bug from client.  On some circumstances
	  client tried to join to a channel it had already joined.

	* Added public key verification process into client's protocol.c.
	  The client now verifies the public key from user and saves
	  it into ~./silc/serverkeys/ directory. 

	  Added into: clientutil.[ch]: silc_client_verify_server_key.

	* Changed SKE protocol's silc_ske_initiator_finish function
	  to accept callback function that verifies the received public
	  key.  Removed old silc_ske_verify_public_key function.

Wed Jul  5 19:19:02 EEST 2000  Pekka Riikonen <priikone@poseidon.pspt.fi>

	* Added into silcpkcs[ch]: silc_pkcs_public_key[_data]_set and
	  silc_pkcs_private_key[_data]_set.

	* Made the password and public authentication more cleaner in
	  server's protocol.c.

	* Removed historic and obsolete protocol `channel_auth' from
	  both client and server.

	* Removed wrong way of sending command status messages from
	  server to client in server's command.c.  The old way violated
	  protocol specification.  

	  Changes to silccore/silccommand.[ch]: removed
	  silc_command_encode_status_payload -> not needed anymore,
	  changed silc_command_encode_payload_va to accept extra
	  argument on variable argument list.  The argument type must
	  now be provided to the function.  Also, added new function:
	  silc_command_encode_reply_payload_va which is same as
	  normal command_encode_payload_va except command status type
	  is provided as extra argument.

Tue Jul  4 18:26:39 EEST 2000  Pekka Riikonen <priikone@poseidon.pspt.fi>

	* Added ~./silc directory handling.  The directory includes the
	  public and private keys for the client.

	  Added silc_client_check_silc_dir, silc_client_create_identifier
	  and silc_client_load_keys.

	* Implemented SILC protocol compliant public key.  Added public
	  and private key saving to and loading from files.

	  Added into silcpkcs.[ch]: silc_pkcs_encode_identifier,
	  silc_pkcs_public_key_encode[_data], silc_pkcs_public_key_decode,
	  silc_pkcs_private_key_encode[_data], silc_pkcs_private_key_decode,
	  silc_pkcs_public_key_alloc, silc_pkcs_public_key_free,
	  silc_pkcs_private_key_alloc and silc_pkcs_private_key_free.

	  Implemented: silc_pkcs_save_[public/private]_key[_data] and
	  silc_pkcs_load_[public/private]_key.

Mon Jul  3 18:51:27 EEST 2000  Pekka Riikonen <priikone@poseidon.pspt.fi>

	* Added silc_server_get_route (route.[ch]) to get connection
	  data for the fastest route for given ID.

	* Implemented INVITE command on client and server.  The command
	  were re-defined in the SILC Protocol Specification and the
	  implementation now complies with the specification.

	* Implemented PING command on client and server.

	* Implemented NAMES command on client and server.  The server side
	  supports currently only normal server not router server yet.
	  Some changes to NAMES definition in SILC protocol specification.

Sun Jul  2 18:23:01 EEST 2000  Pekka Riikonen <priikone@poseidon.pspt.fi>

	* Implemented LEAVE command on client and server.

	* Previously deprecated SILC_PACKET_FORWARDED flag is now in use 
	  again.  This change was made to the protocol as well.  Server
	  should not violate the protocol specification anymore.

Fri Jun 30 14:03:26 EEST 2000  Pekka Riikonen <priikone@poseidon.pspt.fi>

	* Added SOCKS4 and SOCKS5 support to SILC client.  SOCKS5
	  was tested.  SOCKS4 was not but should work anyway.
